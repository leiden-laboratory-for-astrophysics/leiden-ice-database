"""Migration message

Revision ID: fc7606795bea
Revises: 
Create Date: 2021-09-03 10:17:41.924302

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc7606795bea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('analogues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name2', sa.String(), nullable=True),
    sa.Column('name3', sa.String(), nullable=True),
    sa.Column('name4', sa.String(), nullable=True),
    sa.Column('name5', sa.String(), nullable=True),
    sa.Column('deposition_temperature', sa.Float(), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('DOI', sa.String(), nullable=False),
    sa.Column('pub_date', sa.Date(), nullable=True),
    sa.Column('path_annot', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spectra',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('analogue_id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('exposure_time', sa.Integer(), nullable=True),
    sa.Column('column_density', sa.Float(), nullable=True),
    sa.Column('ice_thickness', sa.Float(), nullable=True),
    sa.Column('resolution', sa.Float(), nullable=True),
    sa.Column('wavenumber_range', sa.String(), nullable=True),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['analogue_id'], ['analogues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spectra')
    op.drop_table('analogues')
    op.drop_table('users')
    # ### end Alembic commands ###


def upgrade_n():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('n_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('n_analogues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('n_user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('deposition_temperature', sa.Float(), nullable=True),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('DOI', sa.String(), nullable=True),
    sa.Column('pub_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['n_user_id'], ['n_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('n_val',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('n_analogue_id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('exposure_time', sa.Integer(), nullable=True),
    sa.Column('resolution', sa.Float(), nullable=True),
    sa.Column('wavenumber_range', sa.String(), nullable=True),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['n_analogue_id'], ['n_analogues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_n():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('n_val')
    op.drop_table('n_analogues')
    op.drop_table('n_users')
    # ### end Alembic commands ###


def upgrade_sc():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sc_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('sc_analogues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sc_user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('deposition_temperature', sa.Float(), nullable=True),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('DOI', sa.String(), nullable=True),
    sa.Column('pub_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['sc_user_id'], ['sc_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sc_val',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sc_analogue_id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('cont_model', sa.String(), nullable=False),
    sa.Column('resolution', sa.Float(), nullable=True),
    sa.Column('wavenumber_range', sa.String(), nullable=True),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['sc_analogue_id'], ['sc_analogues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_sc():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sc_val')
    op.drop_table('sc_analogues')
    op.drop_table('sc_users')
    # ### end Alembic commands ###

